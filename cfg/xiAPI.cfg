#!/usr/bin/env python
PACKAGE = "ximea_camera"
from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

timing_mode_enum = gen.enum([
    gen.const("free_running", int_t, 0, "camera acquires images at a maximum possible framerate"),
    gen.const("frame_rate", int_t, 1, "please refer to xiAPI Frame Rate Control support page")],
    "enum to configure timing mode")

gen.add("acq_timing_mode", int_t, 0, "A size parameter which is edited via an enum", 1, 0, 3,
        edit_method=timing_mode_enum)
gen.add("framerate", double_t, 0, "Defines frames per second of sensor. see also acq_timint_mode", 100.0, 1.0, 200.0)
gen.add("gain", double_t, 0, "Gain in dB", 5, -1.5, 6)
gen.add("exposure", double_t, 0, "Exposure time in us", 9000, 0, 1e+04)
gen.add("aeag", bool_t, 0, "Automatic exposure/gain", False)
gen.add("aeag_roi_offset_x", int_t, 0, "Automatic exposure/gain ROI offset X", 0, 0, 1280)
gen.add("aeag_roi_offset_y", int_t, 0, "Automatic exposure/gain ROI offset Y", 0, 0, 1040)
gen.add("aeag_roi_width", int_t, 0, "Automatic exposure/gain ROI Width", 1280, 0, 1280)
gen.add("aeag_roi_height", int_t, 0, "Automatic exposure/gain ROI Height", 1040, 0, 1040)
gen.add("bpc", bool_t, 0, "Correction of bad pixels", False)
gen.add("auto_wb", bool_t, 0, "Automatic white balance", False)
gen.add("width", int_t, 0, "Width of the Image provided by the device (in pixels)", 1280, 16, 1280)
gen.add("height", int_t, 0, "Height of the Image provided by the device (in pixels)", 344, 2, 1040)
gen.add("offsetX", int_t, 0, "Horizontal offset from the origin to the area of interest (in pixels)", 0, 0, 1280)
gen.add("offsetY", int_t, 0, "Vertical offset from the origin to the area of interest (in pixels)", 340, 0, 1040)
gen.add("recent_frame", bool_t, 0, "Retrieve the most recent frame instead of the next in buffer", False);

exit(gen.generate(PACKAGE, "ximea_camera", "xiAPI"))
