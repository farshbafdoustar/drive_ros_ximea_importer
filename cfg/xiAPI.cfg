#!/usr/bin/env python
PACKAGE = "ximea_camera"
from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add
acq_timing_mode

timing_mode_enum = gen.enum([
    gen.const("free running", int_t, 0, "camera acquires images at a maximum possible framerate"),
    gen.const("frame rate", int_t, 1, "please refer to xiAPI Frame Rate Control support page")],
gen.add("acq_timing_mode", int_t, 0, "A size parameter which is edited via an enum", 1, 0, 3, edit_method=timing_mode_enum)


gen.add("gain", double_t, 0, "Gain in dB", 0, -1.5, 6)
gen.add("exposure", double_t, 0, "Exposure time in us", 26, 26, 1e+04)
gen.add("aeag", bool_t, 0, "Automatic exposure/gain", False)
gen.add("aeag_roi_offset_x", int_t, 0, "Automatic exposure/gain ROI offset X", 0, 0, 2040)
gen.add("aeag_roi_offset_y", int_t, 0, "Automatic exposure/gain ROI offset Y", 0, 0, 1080)
gen.add("aeag_roi_width", int_t, 0, "Automatic exposure/gain ROI Width", 2040, 0, 2040)
gen.add("aeag_roi_height", int_t, 0, "Automatic exposure/gain ROI Height", 1080, 0, 1080)
gen.add("bpc", bool_t, 0, "Correction of bad pixels", False)
gen.add("auto_wb", bool_t, 0, "Automatic white balance", False)
gen.add("width", int_t, 0, "Width of the Image provided by the device (in pixels)", 2040, 16, 2040)
gen.add("height", int_t, 0, "Height of the Image provided by the device (in pixels)", 1080, 2, 1080)
gen.add("offsetX", int_t, 0, "Horizontal offset from the origin to the area of interest (in pixels)", 0, 0, 2040)
gen.add("offsetY", int_t, 0, "Vertical offset from the origin to the area of interest (in pixels)", 0, 0, 1080)

gen.add("recent_frame", bool_t, 0, "Retrieve the most recent frame instead of the next in buffer", False);

exit(gen.generate(PACKAGE, "ximea_camera", "xiAPI"))

